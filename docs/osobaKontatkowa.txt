//SELECT osobaKontaktowa po id oddziaÅ‚u
kontrahenci.get('/osobaKontaktowaOddzial/:id', (req, res) => {

	pool.getConnection((err, connection) => {
		if(err) throw err
		
		connection.query('SELECT * from osoba_kontaktowa WHERE 	id_oddzialu = ?', [req.params.id], (err, rows) =>{
			connection.release()
			
			if(!err){
				res.send(rows)
			}else{
				console.log(err)
			}		
		})	
	})
})

// INSERT osobaKontakotwa
kontrahenci.post('/osobaKontaktowaAdd', (req, res) => {

	pool.getConnection((err, connection) => {
		if(err) throw err
		
		
		const params = req.body
		
		connection.query('INSERT INTO osoba_kontaktowa SET ?', params,  (err, rows) =>{
			connection.release()
			
			if(!err){
				res.send(rows)
			}else{
				console.log(err)
			}
			
		})
	})
})

//Update OsobaKontaktowa
kontrahenci.put('/osobaKontaktowaUpdate', (req, res) => {

	pool.getConnection((err, connection) => {
		if(err) throw err
		
		
		const { id_osoby_kontaktowej, imie, nazwisko, numer_telefonu, email, id_oddzialu } = req.body
		
		connection.query('UPDATE osoba_kontaktowa SET imie=?, nazwisko=?, numer_telefonu=?, email=? WHERE id_osoby_kontaktowej = ?', [imie, nazwisko, numer_telefonu, email, id_osoby_kontaktowej],  (err, rows) =>{
			connection.release()
			
			if(!err){
				res.send(rows)
			}else{
				console.log(err)
			}
			
		})
	})
})

//Delete osobaKontaktowa po id_osoby_kontaktowej
kontrahenci.delete('/osobaKontaktowaDelete/:id', (req, res) => {

	pool.getConnection((err, connection) => {
		if(err) throw err
		
		connection.query('DELETE from osoba_kontaktowa WHERE id_osoby_kontaktowej = ?', [req.params.id], (err, rows) =>{
			connection.release()
			
			if(!err){
				res.send(rows)
			}else{
				console.log(err)
			}		
		})	
	})
})
